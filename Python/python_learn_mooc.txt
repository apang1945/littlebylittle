写在开头:这是我自己为了好好学习Python写的笔记，有一些地方可能没有写的完全，仅代表个人理解
    (1)Windows的cmd命令打开py文件的办法:输入cd(打开文件夹命令) eg:cd desktop\py 然后dir(用来显示文件夹的所有文件) 然后执行py文件 eg:python PythonDraw.py
    (2)Windows终端换盘的指令，原来在C盘想换到D盘，直接输入D:
1.字符串处理方法
    (1)name.tilte() --- 将name包含的内容首字母大写
    (2)name.upper() --- 将name包含的内容全部大写
    (3)name.lower() --- 将name包男的字母全部小写
2.删除空白方法restrip(),只是暂时的
    name = "python "
    name.rstrip() 得到的答案为:python
    name = " python "
    name.lstrip() 得到的答案为:python (有空格)
    name.strip() 得到的答案为:python

实例1(圆面积计算)
Ps:两种保留位数的方法
    1."{:.2f}".format(a)
    2.'%.2f' %a
///
r = 25
area = 3.1415 * r * r
print(area)
1963.4375000000002
print("{:.2f}".format(area))
1963.44
print('%.2f' %area)
1963.44
///
实例2(同切圆绘制)
Ps:要注意数据的类型，input输入的是整型，在绘制圆的时候需要Π的引入，Π是无理数，所以要进行格式转换
    eg:float(a)
///
size = input('请输入画笔的粗细:')
a = input('请输入所要画的圆的半径:')
r = float(a)
import turtle
turtle.pensize(size)
turtle.circle(r)
turtle.circle(r * 4)
turtle.circle(r * 8)
turtle.circle(r * 16)
///
实例3(五角星绘制)
Ps:
^_^
待补充
^~^
///
from turtle import *
color('red' , 'red')
begin_fill()
for i in range(5):
    fd(200)
    rt(144)

end_fill()
///
Python第一段代码(包含代码解读):
///
TempStr = input('请输入带有符号的温度值：')
if TempStr[-1] in ['F','f']:
    C = (eval(TempStr[0 : -1]) - 32)/1.8
    print('转换后的温度是{:.2f}C'.format(C))
elif TempStr[-1] in ['C','c']:
    F = 1.8*eval(TempStr[0 : -1]) + 32
    print('转换后的温度是{:.2f}F'.format(F))
else:
    print('输入格式错误')
///
注解:1.利用input输入要计算的数值，input()函数用法如下：input（''提示要输入的信息：'')
     2.TempStr[-1]表示数据的位置。在python中，数据方式排列的有两种。
     一种是正向递增(0,1,2,3,4 ...)。如数据S=12345，S[0]为1，S[2]为2。另一种是逆向递减(... -4,-3,-2,-1),S[-1]为5，S[-2]为4.
     3.eval(TempStr[0 : -1])
     eval()-评估函数:是去掉最外层侧的引号，eval('123')将字符串变为整数123.
     TempStr[0:-1]表示取该数据的某个范围，当所取数据从TempStr[0]开始，**不到**TempStr[-1].
     举一反三：[0:]指取所有数据，[:-1]指取除了最后一个数据的所有数据。
    4.print('转换后的温度是{:.2f}C'.format(C))这个重点!!!
      (1){}表示槽，后续变量填充到槽中
      (2){:.2f}变量C填充到这个位置的时候取小数点后两位
turtle库的学习
1.turtle.setup(width , height , startx , starty)//用于设置窗体的大小和位置
    Ps:(1)四个参数后两个可选，可写可不写eg:turtle.setup(800 , 400)生成一个长800宽400的窗体
       (2)setup函数不是必须要有的
2.坐标相关:
    (1)绝对坐标
        turtle,goto(a , b)//绘制(0,0)到(a,b)的直线
    (2)相对坐标，相对于turtle的方向
        turtle.fd(d)//前进d个像素格子
        turtle.bk(d)//后退d个像素格子
        turtle.circle(r，angle)//转动角度走r个像素格子
3.RGB颜色库:
    色彩模式有两种1.0-1的小数2.0-255的整数
    切换色彩模式tuetle.color(mode)        //vscode在输入英文的时候间隔空格时的处理办法:中文状态下shift+空格键
    mode -1.0:RGB小数值
         -255:RGM整数值
4.代码解释:
    import turtle#导入turtle库
    turtle.setup(650, 350, 200, 200)#设置画布尺寸:长650，宽350，画布左上顶点与屏幕左上顶点的距离为200 ， 200
    turtle.penup()#拿起画笔
    turtle.fd(-250)#向后移动250像素格子，在此过程不会产生运动轨迹
    turtle.pendown()#落下画笔
    turtle.pensize(25)#设置画笔粗细为25
    turtle.pencolor("magenta")#设置画笔颜色为magenta
    turtle.seth(-40)#方向控制函数为绝对-40
    for i in range(4):#循环语句，从0 - 3，为0 1 2 3
        turtle.circle(40, 80)#运动控制函数，圆的圆心在海龟左侧40个单元格处，运动角度80
        turtle.circle(-40, 80)#运动控制函数，圆的圆心在海龟右侧40个单元格处，运动角度80
    turtle.circle(40, 80/2)#运动控制函数，圆的圆心在海龟左侧40个单元格处，运动角度40
    turtle.fd(40)#前进40
    turtle.circle(16, 180)#运动控制函数，圆的圆心在海龟左侧16个单元格处，运动角度180
    turtle.fd(40 * 2/3)#前进40 * 2/3
    tuetle.done()###绘图结束,加这个程序不会自动退出，会继续保留窗体
5.画笔控制函数:
    (1)画笔操作后一直有效，一般都成对出现
        -turtle.penup() 别名turtle.pu()
        -turtle.pendown() 别名turtle.pd()
        -turtle.pensize(width) 别名turtle.width(width)
        -turtle.pencolor() 
            --颜色字符串 
                        -turtle.pencolor("purple")
                        -turtle.pencolor(0.63, 0.13, 0.94)//修改参见81行
                        -turtle.pencolor((0.63, 0.13, 0.94))//元组类型
6.运动控制函数:
    (1)走直线或者走曲线
        -turtle.forward(d) 别名 turtle.fd(d)//d可正可负
        -turtle.circle(r , extent = none)
7.方向控制函数:
    分为相对角度和绝对角度两个
        -turtle.setheading(angle) 别名 turtle.seth(angle)//绝对角度eg:tuetle.seth(45)
        Ps:
            (1)只改变角度不会前进后退
            (2)angle是绝对角度
            (3)turtle.left(angle)和turtle.right(left)
8.循环语句:
    使用<for <变量> in range (<参数>)
        <被循环执行的语句>
    Ps:
        (1)循环次数即为参数，范围是0 ~ (参数-1)
        (2)range()
            -range(N)产生循环计数序列(0 ~ N-1)的整数，共 N 个
            -range(M , N)产生(M ~ N-1)的整数，共 N-M 个
注释：
    1.库的引用--使用import 保留字实现
        import <库名>
        <库名>.<函数名>(<函数参数>)
    2.代码简化
        (1)利用from <库名> import*
            之前需要输入多条turtle.<函数名>，太过于复杂，使用以下简化技巧
            from turtle import*
            setup(650, 350, 200, 200)
            penup()
            fd(-250)
            pendown()
            pensize(25)
            pencolor("magenta")
            seth(-40)
            for i in range(4):
                circle(40, 80)
                circle(-40, 80)
            circle(40, 80/2)
            fd(40)
            circle(16, 180)
            fd(40 * 2/3)
            done()
        (2)利用import和as保留字共同完成
            import <库名> as <库别名>
            <库别名>.<函数名>(<函数参数>)
///
基本数据类型
1.
    浮点数
    (1)存在不确定尾数 eg: 0.1 + 0.2 == 0.3 输出结果为False，正是由于不确定尾数的存在
       为解决这一现象，使用round函数 eg:round(0.1 +0.2 , 1) == 0.3 输出结果为True
       解释一下-round(x, b)对x进行四舍五入，保留b个小数
    (2)可以使用科学计数法
       <a>e<b> eg:4e3即为400
2.数值运算函数
    -abs(x) --- 求x的绝对值
    -divmod(x , y) --- 求商余操作
    -pow(x, y[, z]) --- 幂余操作，[..]可省略 eg：pow(3, pow(3, 99), 10000)
3.天天向上的力量实例
